name: Deploy AzFunctions to Azure Function App

on:
  push:
    branches: [ "master" ]
    paths: [ "matts.AzFunctions/**", "matts.AzFunctions.Tests/**" ]
  workflow_dispatch:

permissions:
  contents: read

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_FUNCTIONAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_FUNCTIONAPP_NAME: 'matthews-ats-funcs-staging'         # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './matts.AzFunctions/'       # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: '7.0.x'                                      # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

jobs:
## BUILD
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
      
      - name: 'Upload Build Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: my-function
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output/
          retention-days: 1
## TEST
  test:
    name: Test
    runs-on: ubuntu-latest
    permissions: write-all
    needs: build
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Create variables for module cacher
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v4
        with:
          modules-to-cache: Az.Storage

      - name: Install Azurite
        id: azuright
        uses: potatoqualitee/azuright@main
        with:
          self-signed-cert: true

      - name: Run Tests
        working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        shell: bash
        run: |
          dotnet test -c Release --results-directory ./testresults ./matts.AzFunctions.Tests.csproj
      
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        env:
          PROJECT_PATH: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        with:
          compare_to_earlier_commit: false
          files: |
            testresults/**/*.trx
## DEPLOY
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [build, test]
    environment:
      name: 'Staging'
    steps:
      - name: 'Download Build Artifact'
        uses: actions/download-artifact@v3
        with:
          name: my-function
          path: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output/
      
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
